docker build -t solana142 .
docker container run -it solana142
RUST_LOG='trace' USE_INSTALL=1 ./multinode-demo/bootstrap-validator.sh

docker-compose build

# подключаем CLI к кластеру. порт и http !
solana config set --url http://192.168.16.2:8899/
solana validators

# новый кошелек
solana-keygen new --outfile my_solana_wallet.json
solana airdrop 19 3rhTCqdChRSvHHrsfBFfS3Dn1u3QkZWkcH23cuVjcSiw

# валидный публичный адрес
solana-keygen new --no-passphrase --no-outfile
solana balance 7h5eyxxXoJ6bq7wB1RQ8snUZBP47zdhXy8xVahtJC7a3

solana transfer --from my_solana_wallet.json 2Mw7zXCXyNFgf6PdCXRF7HtFZL5U53TdGfKp4T923h1n 15 --fee-payer my_solana_wallet.json

указать ENV с абсолютным путем! перед запуском команд. export переменных окружения.

TOML_CONFIG=$PWD/config.toml ./multinode-demo/setup.sh
TOML_CONFIG=$PWD/config.toml ./multinode-demo/bootstrap-validator.sh

TOML_CONFIG=$PWD/config.toml ./multinode-demo/setup.sh


X - контролируемые параметры (конфиг, который может варьировать разработчик)
alpha - неконтролируемые параметры (количество нод, транзакции, византийские ноды)
y - целевая функция. (TPS, latency, decentralization=больше нод, безопасность)
(not)alpha - логи ноды, которые отображают проекция alpha.

Подобрать такие X чтобы минимизировать влияние alpha на y. ( оптимизировать Y и уменьшить вариативность )

